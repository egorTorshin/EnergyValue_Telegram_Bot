version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: smart_ration_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-telegram_bot}
      POSTGRES_USER: ${DB_USER:-bot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-bot_user} -d ${DB_NAME:-telegram_bot}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Telegram бот
  bot:
    build: .
    container_name: smart_ration_bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=8205949179:AAE52BtsgcTg5rlTm1nUgVCjruCpRXXpDeo
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-bot_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-telegram_bot}
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bot_network
    volumes:
      - ./logs:/app/logs:rw
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import asyncio; print(\"Bot is alive\")'"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
