#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Smart Ration Bot
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./monitor.sh

set -e

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º docker-compose –∫–æ–º–∞–Ω–¥—É
if command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE="docker-compose"
else
    DOCKER_COMPOSE="docker compose"
fi

echo -e "${BLUE}üìä Smart Ration Bot - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥${NC}"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container() {
    local container_name=$1
    local service_name=$2
    
    if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$container_name"; then
        local status=$(docker ps --format "table {{.Names}}\t{{.Status}}" | grep "$container_name" | awk '{print $2}')
        if [[ $status == "Up" ]]; then
            echo -e "‚úÖ $service_name: ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC}"
        else
            echo -e "‚ö†Ô∏è $service_name: ${YELLOW}$status${NC}"
        fi
    else
        echo -e "‚ùå $service_name: ${RED}–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîç –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
check_container "smart_ration_bot" "Telegram Bot"
check_container "smart_ration_db" "PostgreSQL"
check_container "smart_ration_redis" "Redis"
check_container "smart_ration_nginx" "Nginx"

echo

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" | grep -E "(smart_ration|CONTAINER)"

echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:"
if $DOCKER_COMPOSE logs --tail=50 bot 2>/dev/null | grep -i "error\|exception\|failed" | tail -5; then
    echo -e "${RED}–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö!${NC}"
else
    echo -e "${GREEN}–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
fi

echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
if $DOCKER_COMPOSE exec -T postgres pg_isready -U bot_user -d telegram_bot &>/dev/null; then
    echo -e "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${GREEN}–î–æ—Å—Ç—É–ø–Ω–∞${NC}"
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    USER_COUNT=$($DOCKER_COMPOSE exec -T postgres psql -U bot_user -d telegram_bot -t -c "SELECT COUNT(*) FROM users;" 2>/dev/null | tr -d ' ')
    if [[ $USER_COUNT =~ ^[0-9]+$ ]]; then
        echo -e "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${BLUE}$USER_COUNT${NC}"
    fi
else
    echo -e "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
fi

echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
echo "üíø –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
df -h / | tail -1 | awk '{print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " $3 " –∏–∑ " $2 " (" $5 ")"}'

# –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤
LOG_SIZE=$(du -sh logs 2>/dev/null | awk '{print $1}' || echo "0K")
echo "üìã –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: $LOG_SIZE"

echo

# –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:"
docker ps --format "table {{.Names}}\t{{.Status}}" | grep smart_ration | while read line; do
    container=$(echo $line | awk '{print $1}')
    uptime=$(echo $line | awk '{$1=""; print $0}' | sed 's/^ *//')
    echo "$container: $uptime"
done

echo

# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo "üõ†Ô∏è –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞:    $DOCKER_COMPOSE restart bot"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:     $DOCKER_COMPOSE logs -f bot"
echo "  –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:   $DOCKER_COMPOSE exec bot bash"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ–≥–æ:    $DOCKER_COMPOSE down"
echo "  –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ:       $DOCKER_COMPOSE up -d"

echo
echo "üîÑ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥:"
echo "   watch -n 5 ./monitor.sh"
